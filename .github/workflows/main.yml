# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  ci:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      #- name: Checkout the code # obtiene el repositorio
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn clean package -Dmaven.test.skip=true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          pull: true
          push: true
          cache-from: type=registry,ref=giovanny96/modyo:latest
          cache-to: type=inline
          tags: giovanny96/modyo:latest
          #build-args: PROFILE=nectar,ARG2=test

#      - name: Step3 build maven project
#        run: |
#             mvn -B package --file pom.xml
#             mkdir staging && cp target/*.jar staging
#
#      - name: Step 4 - Set up a cache for Maven
#        uses: actions/cache@v2
#        with:
#          path: ~/.m2
#          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#          restore-keys: ${{ runner.os }}-m2
#
#      - name: Step 5 - Persist workflow data as artificats
#        uses: actions/upload-artifact@v2
#        with:
#           name: github-actions-artifact
#           path: staging

#      - name: Step4 List the current directory
#        run: ls -a
#
#      - name: Step5 what is the target folder
#        run: |
#             cd target
#             ls -a

#      - name: Build with Maven
#        #run: mvn clean package
#        #run: mvn clean install
#        run: |
#             mvn -B package --file pom.xml
#             mkdir artifacts && cp target/*.jar artifacts
#             cd artifacts && ls
#      - name: Save artifact
#        uses: actions/upload-artifact@v2
#        with:
#          name: github-actions-artifact
#          path: artifacts
#          retention-days: 1
#  cd:
#    runs-on: ubuntu-latest
#    needs: ci
#
#    steps:
#       #- uses: actions/checkout@v3
#       #           - name: Build the Docker image
#       #           run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
#      - uses: actions/checkout@v3

#      - name: Build & push Docker image
#        uses: mr-smithers-excellent/docker-build-push@v5
#        with:
#          #image: ${{ secrets.DOCKERHUB_USERNAME }}/modyo
#          image: giovanny96/modyo
#          tags: latest
#          registry: docker.io
#          dockerfile: Dockerfile
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}

#      - name: Login to Docker Hub
#        #uses: docker/login-action@v2 # docker login
#        uses: docker/login-action@v1 # docker login
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#
#      - name: Set up Docker Buildx
#        #uses: docker/setup-buildx-action@v2
#        uses: docker/setup-buildx-action@v1
#        #id: buildx
#
#      - name: Build and push
#        #uses: docker/build-push-action@v3
#        uses: docker/build-push-action@v2
#        with:
#          context: ./
#          file: ./Dockerfile
#          #push: true
#          tags: ${{ secrets.DOCKERHUB_USERNAME }}/modyo:latest
